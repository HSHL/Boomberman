#############################################################################
# Makefile for building: Boomberman
# Generated by qmake (2.01a) (Qt 4.8.6) on: Do 14. Jan 18:03:51 2016
# Project:  nbproject/qt-Release.pro
# Template: app
# Command: c:/Qt/4.8.6/bin/qmake.exe -spec c:/Qt/4.8.6/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -pipe -O2 -Wall -Wextra $(DEFINES)
CXXFLAGS      = -pipe -O2 -frtti -fexceptions -mthreads -Wall -Wextra $(DEFINES)
INCPATH       = -I'c:/Qt/4.8.6/include/QtCore' -I'c:/Qt/4.8.6/include/QtGui' -I'c:/Qt/4.8.6/include' -I'c:/Qt/4.8.6/include/ActiveQt' -I'.' -I'nbproject' -I'.' -I'c:/Qt/4.8.6/mkspecs/win32-g++'
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads -Wl,-subsystem,windows
LIBS        =        -L'c:/Qt/4.8.6/lib' -lmingw32 -lqtmain build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o -lQtGui4 -lQtCore4 
QMAKE         = c:/Qt/4.8.6/bin/qmake.exe
IDC           = c:/Qt/4.8.6/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o
COPY          = cp
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = build/Release/GNU_MinGW-Windows-Windows/

####### Files

SOURCES       = AI_Player.cpp \
		Arena.cpp \
		Bomb.cpp \
		CollisionBlock.cpp \
		ExplosionBlock.cpp \
		FragileBlock.cpp \
		Game.cpp \
		GameObject.cpp \
		GroundBlock.cpp \
		Item.cpp \
		Menu.cpp \
		Player.cpp \
		SolidBlock.cpp \
		main.cpp moc_AI_Player.cpp \
		moc_Arena.cpp \
		moc_Bomb.cpp \
		moc_CollisionBlock.cpp \
		moc_ExplosionBlock.cpp \
		moc_FragileBlock.cpp \
		moc_Game.cpp \
		moc_GameObject.cpp \
		moc_GroundBlock.cpp \
		moc_Player.cpp \
		moc_SolidBlock.cpp \
		qrc_res.cpp
OBJECTS       = build/Release/GNU_MinGW-Windows-Windows/AI_Player.o \
		build/Release/GNU_MinGW-Windows-Windows/Arena.o \
		build/Release/GNU_MinGW-Windows-Windows/Bomb.o \
		build/Release/GNU_MinGW-Windows-Windows/CollisionBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/ExplosionBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/FragileBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/Game.o \
		build/Release/GNU_MinGW-Windows-Windows/GameObject.o \
		build/Release/GNU_MinGW-Windows-Windows/GroundBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/Item.o \
		build/Release/GNU_MinGW-Windows-Windows/Menu.o \
		build/Release/GNU_MinGW-Windows-Windows/Player.o \
		build/Release/GNU_MinGW-Windows-Windows/SolidBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/main.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_AI_Player.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_Arena.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_Bomb.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_CollisionBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_ExplosionBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_FragileBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_Game.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_GameObject.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_GroundBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_Player.o \
		build/Release/GNU_MinGW-Windows-Windows/moc_SolidBlock.o \
		build/Release/GNU_MinGW-Windows-Windows/qrc_res.o
DIST          = 
QMAKE_TARGET  = Boomberman
DESTDIR        = dist/Release/GNU_MinGW-Windows-Windows/ #avoid trailing-slash linebreak
TARGET         = Boomberman.exe
DESTDIR_TARGET = dist/Release/GNU_MinGW-Windows-Windows/Boomberman.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: qttmp-Release.mk  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.Boomberman  $(LIBS)

build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o: Boomberman_resource.rc
	windres -i Boomberman_resource.rc -o build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o --include-dir=. $(DEFINES)

qttmp-Release.mk: nbproject/qt-Release.pro  c:/Qt/4.8.6/mkspecs/win32-g++/qmake.conf c:/Qt/4.8.6/mkspecs/features/device_config.prf \
		c:/Qt/4.8.6/mkspecs/qconfig.pri \
		c:/Qt/4.8.6/mkspecs/modules/qt_webkit_version.pri \
		c:/Qt/4.8.6/mkspecs/features/qt_functions.prf \
		c:/Qt/4.8.6/mkspecs/features/qt_config.prf \
		c:/Qt/4.8.6/mkspecs/features/exclusive_builds.prf \
		c:/Qt/4.8.6/mkspecs/features/default_pre.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/default_pre.prf \
		c:/Qt/4.8.6/mkspecs/features/release.prf \
		c:/Qt/4.8.6/mkspecs/features/default_post.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/default_post.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/rtti.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/exceptions.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/stl.prf \
		c:/Qt/4.8.6/mkspecs/features/shared.prf \
		c:/Qt/4.8.6/mkspecs/features/warn_on.prf \
		c:/Qt/4.8.6/mkspecs/features/qt.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/thread.prf \
		c:/Qt/4.8.6/mkspecs/features/moc.prf \
		c:/Qt/4.8.6/mkspecs/features/win32/windows.prf \
		c:/Qt/4.8.6/mkspecs/features/resources.prf \
		c:/Qt/4.8.6/mkspecs/features/uic.prf \
		c:/Qt/4.8.6/mkspecs/features/yacc.prf \
		c:/Qt/4.8.6/mkspecs/features/lex.prf \
		c:/Qt/4.8.6/mkspecs/features/include_source_dir.prf \
		c:/Qt/4.8.6/lib/qtmain.prl
	$(QMAKE) -spec c:/Qt/4.8.6/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
c:/Qt/4.8.6/mkspecs/features/device_config.prf:
c:/Qt/4.8.6/mkspecs/qconfig.pri:
c:/Qt/4.8.6/mkspecs/modules/qt_webkit_version.pri:
c:/Qt/4.8.6/mkspecs/features/qt_functions.prf:
c:/Qt/4.8.6/mkspecs/features/qt_config.prf:
c:/Qt/4.8.6/mkspecs/features/exclusive_builds.prf:
c:/Qt/4.8.6/mkspecs/features/default_pre.prf:
c:/Qt/4.8.6/mkspecs/features/win32/default_pre.prf:
c:/Qt/4.8.6/mkspecs/features/release.prf:
c:/Qt/4.8.6/mkspecs/features/default_post.prf:
c:/Qt/4.8.6/mkspecs/features/win32/default_post.prf:
c:/Qt/4.8.6/mkspecs/features/win32/rtti.prf:
c:/Qt/4.8.6/mkspecs/features/win32/exceptions.prf:
c:/Qt/4.8.6/mkspecs/features/win32/stl.prf:
c:/Qt/4.8.6/mkspecs/features/shared.prf:
c:/Qt/4.8.6/mkspecs/features/warn_on.prf:
c:/Qt/4.8.6/mkspecs/features/qt.prf:
c:/Qt/4.8.6/mkspecs/features/win32/thread.prf:
c:/Qt/4.8.6/mkspecs/features/moc.prf:
c:/Qt/4.8.6/mkspecs/features/win32/windows.prf:
c:/Qt/4.8.6/mkspecs/features/resources.prf:
c:/Qt/4.8.6/mkspecs/features/uic.prf:
c:/Qt/4.8.6/mkspecs/features/yacc.prf:
c:/Qt/4.8.6/mkspecs/features/lex.prf:
c:/Qt/4.8.6/mkspecs/features/include_source_dir.prf:
c:\Qt\4.8.6\lib\qtmain.prl:
qmake:  FORCE
	@$(QMAKE) -spec c:/Qt/4.8.6/mkspecs/win32-g++ VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro

dist:
	$(ZIP) Boomberman.zip $(SOURCES) $(DIST) nbproject/nbproject/qt-Release.pro c:/Qt/4.8.6/mkspecs/features/device_config.prf c:/Qt/4.8.6/mkspecs/qconfig.pri c:/Qt/4.8.6/mkspecs/modules/qt_webkit_version.pri c:/Qt/4.8.6/mkspecs/features/qt_functions.prf c:/Qt/4.8.6/mkspecs/features/qt_config.prf c:/Qt/4.8.6/mkspecs/features/exclusive_builds.prf c:/Qt/4.8.6/mkspecs/features/default_pre.prf c:/Qt/4.8.6/mkspecs/features/win32/default_pre.prf c:/Qt/4.8.6/mkspecs/features/release.prf c:/Qt/4.8.6/mkspecs/features/default_post.prf c:/Qt/4.8.6/mkspecs/features/win32/default_post.prf c:/Qt/4.8.6/mkspecs/features/win32/rtti.prf c:/Qt/4.8.6/mkspecs/features/win32/exceptions.prf c:/Qt/4.8.6/mkspecs/features/win32/stl.prf c:/Qt/4.8.6/mkspecs/features/shared.prf c:/Qt/4.8.6/mkspecs/features/warn_on.prf c:/Qt/4.8.6/mkspecs/features/qt.prf c:/Qt/4.8.6/mkspecs/features/win32/thread.prf c:/Qt/4.8.6/mkspecs/features/moc.prf c:/Qt/4.8.6/mkspecs/features/win32/windows.prf c:/Qt/4.8.6/mkspecs/features/resources.prf c:/Qt/4.8.6/mkspecs/features/uic.prf c:/Qt/4.8.6/mkspecs/features/yacc.prf c:/Qt/4.8.6/mkspecs/features/lex.prf c:/Qt/4.8.6/mkspecs/features/include_source_dir.prf c:\Qt\4.8.6\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) build/Release/GNU_MinGW-Windows-Windows/AI_Player.o build/Release/GNU_MinGW-Windows-Windows/Arena.o build/Release/GNU_MinGW-Windows-Windows/Bomb.o build/Release/GNU_MinGW-Windows-Windows/CollisionBlock.o build/Release/GNU_MinGW-Windows-Windows/ExplosionBlock.o build/Release/GNU_MinGW-Windows-Windows/FragileBlock.o build/Release/GNU_MinGW-Windows-Windows/Game.o build/Release/GNU_MinGW-Windows-Windows/GameObject.o build/Release/GNU_MinGW-Windows-Windows/GroundBlock.o build/Release/GNU_MinGW-Windows-Windows/Item.o build/Release/GNU_MinGW-Windows-Windows/Menu.o build/Release/GNU_MinGW-Windows-Windows/Player.o build/Release/GNU_MinGW-Windows-Windows/SolidBlock.o build/Release/GNU_MinGW-Windows-Windows/main.o build/Release/GNU_MinGW-Windows-Windows/moc_AI_Player.o build/Release/GNU_MinGW-Windows-Windows/moc_Arena.o build/Release/GNU_MinGW-Windows-Windows/moc_Bomb.o build/Release/GNU_MinGW-Windows-Windows/moc_CollisionBlock.o build/Release/GNU_MinGW-Windows-Windows/moc_ExplosionBlock.o build/Release/GNU_MinGW-Windows-Windows/moc_FragileBlock.o build/Release/GNU_MinGW-Windows-Windows/moc_Game.o build/Release/GNU_MinGW-Windows-Windows/moc_GameObject.o build/Release/GNU_MinGW-Windows-Windows/moc_GroundBlock.o build/Release/GNU_MinGW-Windows-Windows/moc_Player.o build/Release/GNU_MinGW-Windows-Windows/moc_SolidBlock.o build/Release/GNU_MinGW-Windows-Windows/qrc_res.o
	-$(DEL_FILE) build/Release/GNU_MinGW-Windows-Windows/Boomberman_resource_res.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) qttmp-Release.mk

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_AI_Player.cpp moc_Arena.cpp moc_Bomb.cpp moc_CollisionBlock.cpp moc_ExplosionBlock.cpp moc_FragileBlock.cpp moc_Game.cpp moc_GameObject.cpp moc_GroundBlock.cpp moc_Player.cpp moc_SolidBlock.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_AI_Player.cpp moc_Arena.cpp moc_Bomb.cpp moc_CollisionBlock.cpp moc_ExplosionBlock.cpp moc_FragileBlock.cpp moc_Game.cpp moc_GameObject.cpp moc_GroundBlock.cpp moc_Player.cpp moc_SolidBlock.cpp
moc_AI_Player.cpp: Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		AI_Player.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 AI_Player.h -o moc_AI_Player.cpp

moc_Arena.cpp: AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		SolidBlock.h \
		FragileBlock.h \
		Arena.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Arena.h -o moc_Arena.cpp

moc_Bomb.cpp: GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Bomb.h \
		Item.h \
		Bomb.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Bomb.h -o moc_Bomb.cpp

moc_CollisionBlock.cpp: GameObject.h \
		CollisionBlock.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 CollisionBlock.h -o moc_CollisionBlock.cpp

moc_ExplosionBlock.cpp: GameObject.h \
		CollisionBlock.h \
		GroundBlock.h \
		Bomb.h \
		ExplosionBlock.h \
		Item.h \
		ExplosionBlock.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 ExplosionBlock.h -o moc_ExplosionBlock.cpp

moc_FragileBlock.cpp: GameObject.h \
		FragileBlock.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 FragileBlock.h -o moc_FragileBlock.cpp

moc_Game.cpp: Arena.h \
		AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		SolidBlock.h \
		FragileBlock.h \
		Menu.h \
		Game.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Game.h -o moc_Game.cpp

moc_GameObject.cpp: GameObject.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 GameObject.h -o moc_GameObject.cpp

moc_GroundBlock.cpp: GameObject.h \
		GroundBlock.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 GroundBlock.h -o moc_GroundBlock.cpp

moc_Player.cpp: Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		Player.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 Player.h -o moc_Player.cpp

moc_SolidBlock.cpp: GameObject.h \
		SolidBlock.h
	C:/Qt/4.8.6/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 SolidBlock.h -o moc_SolidBlock.cpp

compiler_rcc_make_all: qrc_res.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_res.cpp
qrc_res.cpp: res.qrc
	c:/Qt/4.8.6/bin/rcc.exe -name res res.qrc -o qrc_res.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 



####### Compile

build/Release/GNU_MinGW-Windows-Windows/AI_Player.o: AI_Player.cpp AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/AI_Player.o AI_Player.cpp

build/Release/GNU_MinGW-Windows-Windows/Arena.o: Arena.cpp Arena.h \
		AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		SolidBlock.h \
		FragileBlock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Arena.o Arena.cpp

build/Release/GNU_MinGW-Windows-Windows/Bomb.o: Bomb.cpp Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Bomb.o Bomb.cpp

build/Release/GNU_MinGW-Windows-Windows/CollisionBlock.o: CollisionBlock.cpp CollisionBlock.h \
		GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/CollisionBlock.o CollisionBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/ExplosionBlock.o: ExplosionBlock.cpp ExplosionBlock.h \
		GameObject.h \
		CollisionBlock.h \
		GroundBlock.h \
		Bomb.h \
		Item.h \
		Player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/ExplosionBlock.o ExplosionBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/FragileBlock.o: FragileBlock.cpp FragileBlock.h \
		GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/FragileBlock.o FragileBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/Game.o: Game.cpp Game.h \
		Arena.h \
		AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		SolidBlock.h \
		FragileBlock.h \
		Menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Game.o Game.cpp

build/Release/GNU_MinGW-Windows-Windows/GameObject.o: GameObject.cpp GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/GameObject.o GameObject.cpp

build/Release/GNU_MinGW-Windows-Windows/GroundBlock.o: GroundBlock.cpp GroundBlock.h \
		GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/GroundBlock.o GroundBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/Item.o: Item.cpp Item.h \
		GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Item.o Item.cpp

build/Release/GNU_MinGW-Windows-Windows/Menu.o: Menu.cpp Menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Menu.o Menu.cpp

build/Release/GNU_MinGW-Windows-Windows/Player.o: Player.cpp Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/Player.o Player.cpp

build/Release/GNU_MinGW-Windows-Windows/SolidBlock.o: SolidBlock.cpp SolidBlock.h \
		GameObject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/SolidBlock.o SolidBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/main.o: main.cpp Game.h \
		Arena.h \
		AI_Player.h \
		Player.h \
		Bomb.h \
		GameObject.h \
		ExplosionBlock.h \
		CollisionBlock.h \
		GroundBlock.h \
		Item.h \
		SolidBlock.h \
		FragileBlock.h \
		Menu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/main.o main.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_AI_Player.o: moc_AI_Player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_AI_Player.o moc_AI_Player.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_Arena.o: moc_Arena.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_Arena.o moc_Arena.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_Bomb.o: moc_Bomb.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_Bomb.o moc_Bomb.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_CollisionBlock.o: moc_CollisionBlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_CollisionBlock.o moc_CollisionBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_ExplosionBlock.o: moc_ExplosionBlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_ExplosionBlock.o moc_ExplosionBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_FragileBlock.o: moc_FragileBlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_FragileBlock.o moc_FragileBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_Game.o: moc_Game.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_Game.o moc_Game.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_GameObject.o: moc_GameObject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_GameObject.o moc_GameObject.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_GroundBlock.o: moc_GroundBlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_GroundBlock.o moc_GroundBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_Player.o: moc_Player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_Player.o moc_Player.cpp

build/Release/GNU_MinGW-Windows-Windows/moc_SolidBlock.o: moc_SolidBlock.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/moc_SolidBlock.o moc_SolidBlock.cpp

build/Release/GNU_MinGW-Windows-Windows/qrc_res.o: qrc_res.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU_MinGW-Windows-Windows/qrc_res.o qrc_res.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

